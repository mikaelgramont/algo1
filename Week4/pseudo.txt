cc = 0
clock = 0

procedure explore(G, v)
	# Input: G = (V, E) is a graph; v ∈ V
	# Output: visited(u) is set to true for all nodes u reachable from v

	visited(v) = true
	previsit(v)
	for each edge (v, u) ∈ E:
		if not visited(u):
			explore(u)
	postvisit(v)


procedure dfs(G)
	for all v ∈ V :
		visited(v) = false
	for all v ∈ V :
		if not visited(v):
			cc += 1
			explore(v)


procedure previsit(v)
	ccnum[v] = cc
	pre[v] = clock
	clock = clock + 1


procedure postvisit(v)
	post[v] = clock
	clock = clock + 1





















procedure explore(G, v)
	# Input: G = (V, E) is a graph; v ∈ V
	# Output: visited(u) is set to true for all nodes u reachable from v

	visited(v) = true
	previsit(v)
	for each edge (v, u) ∈ E:
		if not visited(u):
			explore(u)
	postvisit(v)



procedure dfs(G)
	for all v ∈ V :
		visited(v) = false
	for all v ∈ V :
		if not visited(v):
			explore(v)



